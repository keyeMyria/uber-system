<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roncoo.recharge.common.dao.impl.mapper.RequestInfoMapper" >
  <resultMap id="BaseResultMap" type="com.roncoo.recharge.common.entity.RequestInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="passenger_id" property="passengerId" jdbcType="BIGINT" />
    <result column="departure_id" property="departureId" jdbcType="BIGINT" />
    <result column="destination_id" property="destinationId" jdbcType="BIGINT" />
    <result column="surge" property="surge" jdbcType="INTEGER" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_person" property="updatePerson" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, serial_no, status, phone, passenger_id, departure_id, destination_id, surge, 
    create_person, create_time, update_person, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roncoo.recharge.common.entity.RequestInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from request_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from request_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from request_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.roncoo.recharge.common.entity.RequestInfoExample" >
    delete from request_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.roncoo.recharge.common.entity.RequestInfo" >
    insert into request_info (id, serial_no, status, 
      phone, passenger_id, departure_id, 
      destination_id, surge, create_person, 
      create_time, update_person, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{serialNo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR}, #{passengerId,jdbcType=BIGINT}, #{departureId,jdbcType=BIGINT}, 
      #{destinationId,jdbcType=BIGINT}, #{surge,jdbcType=INTEGER}, #{createPerson,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updatePerson,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.roncoo.recharge.common.entity.RequestInfo" >
    insert into request_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="serialNo != null" >
        serial_no,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="passengerId != null" >
        passenger_id,
      </if>
      <if test="departureId != null" >
        departure_id,
      </if>
      <if test="destinationId != null" >
        destination_id,
      </if>
      <if test="surge != null" >
        surge,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="serialNo != null" >
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="passengerId != null" >
        #{passengerId,jdbcType=BIGINT},
      </if>
      <if test="departureId != null" >
        #{departureId,jdbcType=BIGINT},
      </if>
      <if test="destinationId != null" >
        #{destinationId,jdbcType=BIGINT},
      </if>
      <if test="surge != null" >
        #{surge,jdbcType=INTEGER},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.roncoo.recharge.common.entity.RequestInfoExample" resultType="java.lang.Integer" >
    select count(*) from request_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update request_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.serialNo != null" >
        serial_no = #{record.serialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.passengerId != null" >
        passenger_id = #{record.passengerId,jdbcType=BIGINT},
      </if>
      <if test="record.departureId != null" >
        departure_id = #{record.departureId,jdbcType=BIGINT},
      </if>
      <if test="record.destinationId != null" >
        destination_id = #{record.destinationId,jdbcType=BIGINT},
      </if>
      <if test="record.surge != null" >
        surge = #{record.surge,jdbcType=INTEGER},
      </if>
      <if test="record.createPerson != null" >
        create_person = #{record.createPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatePerson != null" >
        update_person = #{record.updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update request_info
    set id = #{record.id,jdbcType=BIGINT},
      serial_no = #{record.serialNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      passenger_id = #{record.passengerId,jdbcType=BIGINT},
      departure_id = #{record.departureId,jdbcType=BIGINT},
      destination_id = #{record.destinationId,jdbcType=BIGINT},
      surge = #{record.surge,jdbcType=INTEGER},
      create_person = #{record.createPerson,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_person = #{record.updatePerson,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.roncoo.recharge.common.entity.RequestInfo" >
    update request_info
    <set >
      <if test="serialNo != null" >
        serial_no = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="passengerId != null" >
        passenger_id = #{passengerId,jdbcType=BIGINT},
      </if>
      <if test="departureId != null" >
        departure_id = #{departureId,jdbcType=BIGINT},
      </if>
      <if test="destinationId != null" >
        destination_id = #{destinationId,jdbcType=BIGINT},
      </if>
      <if test="surge != null" >
        surge = #{surge,jdbcType=INTEGER},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.roncoo.recharge.common.entity.RequestInfo" >
    update request_info
    set serial_no = #{serialNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      passenger_id = #{passengerId,jdbcType=BIGINT},
      departure_id = #{departureId,jdbcType=BIGINT},
      destination_id = #{destinationId,jdbcType=BIGINT},
      surge = #{surge,jdbcType=INTEGER},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>